buildscript {
    repositories {
        mavenCentral()
        maven { url 'http://repo.spring.io/plugins-release' }
    }

    dependencies {
        classpath 'io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.1'
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
        classpath 'pl.allegro.tech.build:axion-release-plugin:1.4.1'
    }
}


plugins {
    id 'groovy'
    id 'pl.allegro.tech.build.axion-release' version '1.10.0'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

scmVersion {
    tag {
        prefix = 'embedded-consul'
    }
}

project.group = 'com.pszymczyk.consul'
project.version = scmVersion.version

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.7'
    compile 'org.apache.ant:ant:1.9.4'
    compile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'
    compile 'org.slf4j:slf4j-api:1.7.25'

    compileOnly 'junit:junit:4.12'
    compileOnly 'org.junit.jupiter:junit-jupiter-api:5.3.2'

    testCompile 'ch.qos.logback:logback-classic:1.2.1'
    testCompile 'com.ecwid.consul:consul-api:1.4.2'
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'com.jayway.awaitility:awaitility:1.7.0'
    testCompile 'com.jayway.awaitility:awaitility-groovy:1.7.0'

}

configurations.all {
    resolutionStrategy {
        force 'org.apache.httpcomponents:httpclient:4.5.5'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '5.6'
}

test {
    testLogging {
        exceptionFormat 'full'
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.groovy
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    from groovydoc
    classifier = 'javadoc'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = 'Embedded Consul'
                description = 'Embedded Consul provides easy way to run Consul in integration tests.'
                url = 'https://github.com/pszymczyk/embedded-consul'
                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'pszymczyk'
                        name = 'Pawel Szymczyk'
                        email = 'pawel@pszymczyk.com'
                    }
                }
                scm {
                    url = 'https://github.com/pszymczyk/embedded-consul'
                    connection = 'git@github.com:pszymczyk/embedded-consul.git'
                    developerConnection = 'git@github.com:pszymczyk/embedded-consul.git'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username project.findProperty('nexusUsername') ?: 'secured'
                password project.findProperty('nexusPassword') ?: 'secured'
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
